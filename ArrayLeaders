
Array Leaders
Difficulty: EasyAccuracy: 29.94%Submissions: 888K+Points: 2Average Time: 15m
You are given an array arr of positive integers. Your task is to find all the leaders in the array. An element is considered a leader if it is greater than or equal to all elements to its right. The rightmost element is always a leader.

Examples:

Input: arr = [16, 17, 4, 3, 5, 2]
Output: [17, 5, 2]
Explanation: Note that there is nothing greater on the right side of 17, 5 and, 2.
Input: arr = [10, 4, 2, 4, 1]
Output: [10, 4, 4, 1]
Explanation: Note that both of the 4s are in output, as to be a leader an equal element is also allowed on the right. side
Input: arr = [5, 10, 20, 40]
Output: [40]
Explanation: When an array is sorted in increasing order, only the rightmost element is leader.
Input: arr = [30, 10, 10, 5]
Output: [30, 10, 10, 5]
Explanation: When an array is sorted in non-increasing order, all elements are leaders.
Constraints:
1 <= arr.size() <= 106
0 <= arr[i] <= 106

Expected Complexities
Company Tags
PayuAdobe
SOLUTION:
Absolutely—let’s put the O(N) solution into JavaScript


// User function Template for javascript

/**
 * @param {number[]} a
 * @returns {number[]}
 */
class Solution {
    // Function to find the leaders in the array.
    leaders(a) {
        const n = a.length;
        const leaders = [];
        let max_from_right = a[n - 1];

        leaders.push(max_from_right);

        // Traverse from right to left
        for (let i = n - 2; i >= 0; i--) {
            if (a[i] >= max_from_right) {
                leaders.push(a[i]);
                max_from_right = a[i];
            }
        }

        // Reverse to maintain order from left to right
        leaders.reverse();
        return leaders;
    }
}
const sol = new Solution();
console.log(sol.leaders([16, 17, 4, 3, 5, 2])); // [17, 5, 2]
console.log(sol.leaders([10, 4, 2, 4, 1]));    // [10, 4, 4, 1]

















