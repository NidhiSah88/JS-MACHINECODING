Kadane's Algorithm
Difficulty: MediumAccuracy: 36.28%Submissions: 1.1MPoints: 4Average Time: 20m
Given an integer array arr[]. You need to find the maximum sum of a subarray.

Examples:

Input: arr[] = [2, 3, -8, 7, -1, 2, 3]
Output: 11
Explanation: The subarray {7, -1, 2, 3} has the largest sum 11.
Input: arr[] = [-2, -4]
Output: -2
Explanation: The subarray {-2} has the largest sum -2.
Input: arr[] = [5, 4, 1, 7, 8]
Output: 25
Explanation: The subarray {5, 4, 1, 7, 8} has the largest sum 25.
Constraints:
1 ≤ arr.size() ≤ 105
-109 ≤ arr[i] ≤ 104


SOL:





class Solution {
    /**
     * @param {number[]} arr
     * @returns {number}
     */
    maxSubarraySum(arr) {
        // Your code here

// method 1--but test case failed
        // let maxSum = 0;
        // let sum = 0;
        // for(let i = 0; i< arr.length; i++){
        //     let sum = 0;
        //     for(let j = 0 ; j< arr.length ; j++){
        //         sum += arr[j];
        //         maxSum= Math.max(maxSum, sum);
        //     }
        // }
// method 2 -- -but test case failed
        //  for (let i = 0; i < arr.length ; i++) {
        //          sum += arr[i];

        //         if (sum > maxSum) {
        //             maxSum = sum;
        //         }

        // // If sum < 0: discard the sum calculated
        //         if (sum < 0) {
        //             sum = 0;
        //         }
        // }
        
         let res = arr[0];
    let maxEnding = arr[0];

    for (let i = 1; i < arr.length; i++) {
        
        // Find the maximum sum ending at index i by either extending 
        // the maximum sum subarray ending at index i - 1 or by
        // starting a new subarray from index i
        maxEnding = Math.max(maxEnding + arr[i], arr[i]);
        
        // Update res if maximum subarray sum ending at index i > res
        res = Math.max(res, maxEnding);
    }
    return res;
        
        
        return maxSum;
    }
}

Time Complexity: O(n), since we are traversing the array only one time.
Auxiliary Space: O(1)














