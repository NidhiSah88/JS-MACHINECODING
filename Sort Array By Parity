Sort Array By Parity

Given an integer array nums, move all the even integers at the beginni the array followed by all the odd integers.

Return any array that satisfies this condition.

Example 1:

Input: nums = [3,1,2,4]

Output: [4,2,1,3]

xplanation: The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would al ccepted. In js

ANS :


function sortArrayByParity(nums) {
    let left = 0, right = nums.length - 1;

    while (left < right) {
        if (nums[left] % 2 > nums[right] % 2) {
            // Swap if left is odd and right is even
            [nums[left], nums[right]] = [nums[right], nums[left]];
        }

        if (nums[left] % 2 === 0) left++;
        if (nums[right] % 2 === 1) right--;
    }

    return nums;
}

// Example
console.log(sortArrayByParity([3, 1, 2, 4])); // Possible output: [4, 2, 1, 3]

Explanation:

Use two pointers:

left (start) → scans from the beginning.

right (end) → scans from the end.

If left is odd and right is even, swap them.

Move pointers accordingly until they meet.

This runs in O(n) time and sorts in-place.




